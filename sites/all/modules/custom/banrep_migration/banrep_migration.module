<?php

/**
 * @file
 * Migrate ADC
 */

/* Drupal Hooks */

define('SEMINARIOS_TID', '191');

function format_json($file_uri){
  $new_json = array();
  if( strpos($file_uri, 'public://') !== false ){
    $filepath = drupal_realpath($file_uri);
  }else{
    $filepath = $file_uri;
  }
  $file_contents = file_get_contents($filepath);
  $json = drupal_json_decode($file_contents);
  if( is_array($json) && !empty($json) && isset($json["nodes"]) ){
  	$nodes = $json["nodes"];
  	foreach ($nodes as $key => $node) {
  		if(isset($node["node"])){
  			$new_json[] = $node["node"];
  		}
  	}
  }
  if(!empty($new_json)){
  	$file_content = drupal_json_encode($new_json);
    $name = 'migrate_data.json';
    $directory = 'public://migration/events/';
    $path = $directory . $name;
    $file_delete = file_unmanaged_delete($path);
    file_prepare_directory($directory, FILE_CREATE_DIRECTORY);
    file_prepare_directory($directory, FILE_MODIFY_PERMISSIONS);
    $file = file_save_data($file_content, $path, $replace = FILE_EXISTS_REPLACE);
    if(isset($file->uri)){
    	return $file->uri;
    }
  }
  return $file_uri;
}

function find_serie_de_evento($serie_event_title = ""){
  if(!empty($serie_event_title)){
	  $query = new EntityFieldQuery();
	  $query->entityCondition('entity_type', 'node')
	    ->entityCondition('bundle', 'serie_eventos')
	    ->propertyCondition('title', '%' . db_like($serie_event_title) . '%', 'LIKE')
	    ->range(0, 1);
	   $result = $query->execute();
	  if (isset($result['node'])) {
	    $items_nids = array_keys($result['node']);
	    return isset($items_nids[0])?$items_nids[0]:NULL;
	  }
  }
  return NULL;
}

function _publicacion_obtener_tids_tags($termnames){
  if(!empty($termnames)){
    $termnames = trim($termnames);
    $tags = explode(',', $termnames);
    foreach ($tags as $key => $tag) {
      $tag = trim($tag);
      $query = db_select('taxonomy_term_data', 'ttd');
      $query->fields('ttd', array('tid'));
      $query->condition('ttd.vid', 1);
      $query->condition('ttd.name', '%' . db_like($tag) . '%', 'LIKE');
      $result = $query->execute()->fetchField();
      if($result){
        $items[] = $result;
      }
    }

    return $items;
  }
  return NULL;
}

function _publicacion_obtener_tids_jel($termnames){
  if(!empty($termnames)){
    $termnames = trim($termnames);
    $jels = explode(',', $termnames);

    $query = db_select('taxonomy_term_data', 'ttd');
    $query->fields('ttd', array('tid'));
    $query->condition('ttd.vid', 17);
    $query->condition('ttd.name', $jels, 'IN');

    $result = $query->execute();
    while($record = $result->fetchObject()) {
      $items[] = $record->tid;
    }
    return $items;
  }
  return NULL;
}

function convertPublicationType($value) {
    switch ($value) {
      case 'documento de trabajo':
        $value = 4;
        break;

      case 'articulo':
        $value = 201;
        break;

      case 'libro':
        $value = 206;
        break;

      default:
        break;
    }
    dpm($value);
    return $value;
  }

function _publication_obtener_mes_numerico($mes){
  switch ($mes) {
    case 'Enero':$value = 1;break;
    case 'Febrero':$value = 2;break;
    case 'Marzo':$value = 3;break;
    case 'Abril':$value = 4;break;
    case 'Mayo':$value = 5;break;
    case 'Junio':$value = 6;break;
    case 'Julio':$value = 7;break;
    case 'Agosto':$value = 8;break;
    case 'Septiembre':$value = 9;break;
    case 'Octubre':$value = 10;break;
    case 'Noviembre':$value = 11;break;
    case 'Diciembre':$value = 12;break;

    default:
      break;
  }

  return $value;
}

function _publication_obtener_autor($mail) {
  if (empty($mail)) {
    return FALSE;
  }
  $query = db_select('users', 'u');
  $query->fields('u', array('uid'));
  $query->condition('u.mail', $mail);
  return $query->execute()->fetchField();
}


/**
* Implementation of hook_cron().
*/
/*
	function banrep_migration_cron() {

	  // Get file_uri location
	  $file_uri = variable_get('MIGRATE_EVENTS', '');
	  // Get migration object
	  $migration = Migration::getInstance('Seminarios');
	  if( file_exists($file_uri) ){
	    // Run the import for every user with the needs_update flag
	    $result = $migration->processImport();
	  }
	}
*/

