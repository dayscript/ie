<?php

    /**
     * Implements hook_menu();
     */



     /**
      * Implements hook_cron();
      */


    function banrep_sepi_cron(){
        $enviroment = 'dev';
        $path_in = variable_get('file_private_path').'/sepi-in-'.$enviroment;
        $path_out = variable_get('file_private_path').'/sepi-out-'.$enviroment;
        $files_in_folder = [];
        $files = [];
        watchdog('banrep_sepi', 'Iniciado', $variables = array(), $severity = WATCHDOG_INFO, $link = NULL);

        $files_in_folder = file_scan_directory($path_in, $mask = '/.*\.json$/', $options = array(), $depth = 0);

        dpm($files_in_folder);

        foreach($files_in_folder as $key => $file){

            $files[$file->name] = [ 
                'metadata' =>$file, 
                'contents' => json_decode(utf8_encode(file_get_contents($file->uri)),false) ,
            ];

            $files[$file->name]['result'] = _create_node_publication($files[$file->name]);
            
            file_save_data($files[$file->name]['result'], $destination = $path_out.'/'.$file->name, $replace = FILE_EXISTS_RENAME);

        }

        dpm($files);

        


        
    }


        
    function _create_node_publication($publication){
        $result = null;
        $nid = 0;
        
        $query = new EntityFieldQuery();
        $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'publication')
        // ->fieldCondition('field_sepi', 'value', 0000, '=');
        ->fieldCondition('field_sepi', 'value', $publication['contents']->identificador_sepi, '=');
        $result = $query->execute();
        $nid =  _get_nid($result);
        
        if( !is_null($nid) && is_numeric($nid) ){ // update entity
            
            $node = node_load($nid);
            $node_wrapper = entity_metadata_wrapper('node', $node);
            
            $node_wrapper->field_pub_type->set();
            $node_wrapper->title->set();
            $node_wrapper->field_title_en->set();
            $node_wrapper->field_url->set();
            $node_wrapper->field_doi->set();
            $node_wrapper->field_sepi->set();
            $node_wrapper->field_jel->set();
            $node_wrapper->field_concept_type->set();
            $node_wrapper->field_concept->set();
            $node_wrapper->field_role_within_publication->set();
            $node_wrapper->field_main_author_reference->set();
            $node_wrapper->field_co_authors->set();
            $node_wrapper->field_other_co_authors->set();
            $node_wrapper->field_date->set();
            $node_wrapper->field_publication_year->set();
            $node_wrapper->field_mag_name->set();
            $node_wrapper->field_pub_serie->set();
            $node_wrapper->field_editorial->set();
            $node_wrapper->field_number->set();
            $node_wrapper->field_page->set();
            $node_wrapper->field_volumen->set();
            $node_wrapper->field_pub_city->set();
            $node_wrapper->field_publication_tags->set();

        }else{ // create entity
            $entity_type = 'node';
            $entity = entity_create($entity_type, array('type' => 'publication'));
            $wrapper = entity_metadata_wrapper($entity_type, $entity);

            $node_wrapper->field_pub_type->set();
            $node_wrapper->title->set();
            $node_wrapper->field_title_en->set();
            $node_wrapper->field_url->set();
            $node_wrapper->field_doi->set();
            $node_wrapper->field_sepi->set();
            $node_wrapper->field_jel->set();
            $node_wrapper->field_concept_type->set();
            $node_wrapper->field_concept->set();
            $node_wrapper->field_role_within_publication->set();
            $node_wrapper->field_main_author_reference->set();
            $node_wrapper->field_co_authors->set();
            $node_wrapper->field_other_co_authors->set();
            $node_wrapper->field_date->set();
            $node_wrapper->field_publication_year->set();
            $node_wrapper->field_mag_name->set();
            $node_wrapper->field_pub_serie->set();
            $node_wrapper->field_editorial->set();
            $node_wrapper->field_number->set();
            $node_wrapper->field_page->set();
            $node_wrapper->field_volumen->set();
            $node_wrapper->field_pub_city->set();
            $node_wrapper->field_publication_tags->set();
            $node_wrapper->save();
            _create_node_pub_user($node_wrapper);

        }


    }


    function _create_node_pub_user($node_wrapper){

        $query = new EntityFieldQuery();
        $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'pub_user')
        // ->fieldCondition('field_sepi', 'value', 0000, '=');
        ->fieldCondition('field_user_reference', 'target_id', $node_wrapper->field_main_author_reference, '=')
        ->fieldCondition('field_publicacion', 'target_id', $node_wrapper->nid, '=');
        $result = $query->execute();
        $nid =  _get_nid($result);
        if( !is_null($nid) && is_numeric($nid) ){ // update entity
            $node = node_load($nid);
            $node_wrapper = entity_metadata_wrapper('node', $node);

            $node_wrapper->title->set();
            $node_wrapper->field_publicacion->set();
            $node_wrapper->field_user_reference->set();
            $node_wrapper->field_main_author->set();
            $node_wrapper->field_estado_publicaci_n->set();
            $node_wrapper->field_research_group->set();
            $node_wrapper->field_order->set();
            $node_wrapper->field_puntaje->set();
            $node_wrapper->field_puntaje_usado->set();
            $node_wrapper->field_log_puntaje->set();
            $node_wrapper->save();

        }
        else{
            $entity_type = 'node';
            $entity = entity_create($entity_type, array('type' => 'publication'));
            $wrapper = entity_metadata_wrapper($entity_type, $entity);

            $node_wrapper->title->set();
            $node_wrapper->field_publicacion->set();
            $node_wrapper->field_user_reference->set();
            $node_wrapper->field_main_author->set();
            $node_wrapper->field_estado_publicaci_n->set();
            $node_wrapper->field_research_group->set();
            $node_wrapper->field_order->set();
            $node_wrapper->field_puntaje->set();
            $node_wrapper->field_puntaje_usado->set();
            $node_wrapper->field_log_puntaje->set();
            $node_wrapper->save();
        }
        
    }

    function _get_nid($result){

        if(isset( $result['node'][key($result['node'])]) ){
            return (int)$result['node'][key($result['node'])]->nid;
        }

        return null;
        
    }

    

     
