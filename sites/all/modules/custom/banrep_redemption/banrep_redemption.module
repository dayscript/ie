<?php

module_load_include('inc', 'banrep_redemption', 'banrep_functions');

/**
 * Implements hook_menu().
 */
function banrep_redemption_menu()
{

  // $items['profile/redemption/add'] = array(
  //   'title' => t('Create redemption'),
  //   'page callback' => 'drupal_get_form',
  //   'page arguments' => array('banrep_redemption_add_form',1),
  //   //'access arguments' => array('publicar contenido investigador'),
  //   'access callback' => TRUE,
  //   'type' => MENU_CALLBACK,
  // );
  // $items['profile/training/add'] = array(
  //   'title' => t('Create Traning'),
  //   'page callback' => 'drupal_get_form',
  //   'page arguments' => array('banrep_redemption_add_form', 1),
  //   //'access arguments' => array('publicar contenido investigador'),
  //   'access callback' => TRUE,
  //   'type' => MENU_CALLBACK,
  // );


  $items['proceso/update-state'] = array(
    'title' => 'Update State',
    'page callback' => 'banrep_redemption_update_state',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
 * Implements hook_node_update().
 */

function banrep_redemption_entity_update($entity, $type){
  switch ($type) {

    // Validatade entity type
    case 'entityform':
      switch ($entity->type) {
        
        // validate entityform type
        case 'user_training':
          $user = user_load($entity->uid);
          $field_collection_id = $entity->original->field_studies_carried_out['und'][0]['value'];
          // $user_field_index = _get_index_field_collecion_user($user,'field_studies_carried_out', $field_collection_id);

          $field_collection = entity_load('field_collection_item', array($field_collection_id))[$field_collection_id];
          if( $field_collection->field_aprobado['und'][0]['value'] == 1 ){
            //crear
            $values['field_name'] = 'field_studies_carried_out';
            $entity = entity_create('field_collection_item', $values);
            $entity->setHostEntity('user', $user);
            $entity->field_req_formacion_desempeno = $field_collection->field_req_formacion_desempeno;
            $entity->field_titulo = $field_collection->field_titulo; 
            $entity->field_university = $field_collection->field_university; 
            $entity->field_fecha_inicio_estudio = $field_collection->field_fecha_inicio_estudio; 
            $entity->field_fecha_fin_estudio = $field_collection->field_fecha_fin_estudio; 
            $entity->field_year = $field_collection->field_year; 
            $entity->field_tipo_posgrado = $field_collection->field_tipo_posgrado; 
            $entity->field_nivel_estudio = $field_collection->field_nivel_estudio; 
            $entity->field_lugar_posgrado = $field_collection->field_lugar_posgrado; 
            $entity->field_support_file = $field_collection->field_support_file; 
            $entity->field_pr_visibility = $field_collection->field_pr_visibility; 
            $entity->field_aprobado = $field_collection->field_aprobado; 
            $entity->save();
            user_save($user);
            drupal_set_message('Estudio académico asignado correctamente','status');
          }
          break;
        
          case 'user_redemption':
            if( $entity->field_aprobado['und'][0]['value'] == 1 ){
              $user = user_load($entity->uid);
              $user->field_puntaje_acumulado['und'][0]['value'] -= $entity->field_puntaje['und'][0]['value'];
              $user->field_puntaje_br['und'][0]['value'] -=  $entity->field_puntaje_br['und'][0]['value'];
              $user->field_acumulado_general['und'][0]['value'] -=  $entity->field_puntaje_acumulado['und'][0]['value'];
              user_save($user);
              drupal_set_message('Redención actualizada correctamente','status');
            }
          
          break;

        default:
          # code...
          break;
      }
      
      
      
      break;
    default:
      # code...
      break;
  }
}

/**
 * Implemets hook_form_alter();
 * 
 */

function banrep_redemption_form_user_training_entityform_edit_form_alter(&$form, &$form_state, $form_id){
 
  
  $form['field_studies_carried_out']['und']['add_more']['#access'] = false;
  $form['#attached']['js'][] = drupal_get_path('module', 'banrep_redemption') . '/js/forms.js';
  $visible_conditions = array(
    'REQ_FORMATION_ID_DESEMPEÑO' => REQ_FORMATION_ID_DESEMPEÑO
  );
  
  drupal_add_js(array('banrep_redemption' => $visible_conditions), 'setting');
  
}


/**
 * Implements hook_form_alter();
 */

function banrep_redemption_form_user_redemption_entityform_edit_form_alter(&$form, &$form_state, $form_id){
  
  global $user;
  $user = user_load($user->uid);
  $readonly = 'readonly';
  $readonly_fields = [
    'field_puntaje',
    'field_puntaje_br',
    'field_puntaje_acumulado',
  ];
  
  $select_field_beneficios_options = [];
  foreach($form['field_beneficios']['und']['#options'] as $key => $tid){
    if( $key != '_none'){
      $select_field_beneficios_options[$key] = taxonomy_term_load($key);
    }
  };
   


  $form['#attached']['js'][] = drupal_get_path('module', 'banrep_redemption') . '/js/beneficios_form.js';
  drupal_add_js(array('banrep_redemption' => ['beneficios' => $select_field_beneficios_options]), 'setting');
  

  if($form['#entity']->is_new){

    $form['field_puntaje']['und'][0]['value']['#default_value'] = $user->field_puntaje_acumulado['und'][0]['value'];
    $form['field_puntaje_br']['und'][0]['value']['#default_value'] = $user->field_puntaje_br['und'][0]['value'];
    $form['field_puntaje_acumulado']['und'][0]['value']['#default_value'] = $user->field_acumulado_general['und'][0]['value'];
  
  }

  foreach($readonly_fields as $key => $field){
    $form[$field]['und'][0]['value']['#attributes'][$readonly] = $readonly;
  }
  
  
  

}

