<?php

/**
 * Implements hook_theme().
 */
function banrep_seminarios_theme($existing, $type, $theme, $path) {
  return array(
    'sem_hm_list' => array(
      'file' => 'banrep_seminarios.theme.inc',
      'variables' => array('events' => NULL),
    ),
  );
}
/**
 * Implements hook_block_info().
 */
function banrep_seminarios_block_info() {
  $blocks['sem_form_serie'] = array(
    'info' => t('Form Seminario Serie'),
    'cache' => DRUPAL_NO_CACHE
  );
  $blocks['sem_hm_list'] = array(
    'info' => t('Home Last Events'),
    'cache' => DRUPAL_NO_CACHE
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function banrep_seminarios_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'sem_form_serie':
      global $language;
      if($language->language == 'es'){
        $nid = 54;
      }
      else {
        $nid = 717;
      }
      $wnode = node_load($nid);
      $form = drupal_get_form('webform_client_form_' . $nid, $wnode, array());
      $output = '<div class="remodal clearfix" data-remodal-id="modal"><a data-remodal-action="close" class="remodal-close"></a>' . render($form) . '</div>';
      $block['subject'] = t('');
      $block['content'] = $output;
      break;

    case 'sem_hm_list':
      $ciudades = array('Bogotá, Colombia', 'Cali', 'Cartagena', 'Medellín', 'Bucaramanga');
      $items = array();
      foreach ($ciudades as $key => $ciudad) {
        $query = db_select('node', 'n');
        $query->condition('n.type', 'event');
        $query->condition('n.status', NODE_PUBLISHED);
        $query->join('field_data_field_place', 'p', 'n.nid = p.entity_id');
        $query->join('field_data_field_event_date', 'd', 'n.nid = d.entity_id');
        $query->condition('p.field_place_value', $ciudad, '=');
        $query->condition('d.field_event_date_value', time(), '>=');
        $query->fields('n', array('nid', 'title'));
        $query->fields('d', array('field_event_date_value', 'field_event_date_value2'));
        $query->fields('p', array('field_place_value'));
        $query->orderBy('d.field_event_date_value', 'ASC');
        $query->range(0,1);
        $result = $query->execute()->fetchAssoc();
        if(!empty($result)) {
          $items[$key]['nid'] = $result['nid'];
          $items[$key]['title'] = $result['title'];
          $items[$key]['date'] = format_date($result['field_event_date_value'], 'custom', 'm/d/Y');
          $items[$key]['date_ini'] = format_date($result['field_event_date_value'], 'custom', 'g:i a');
          $items[$key]['date_end'] = ($result['field_event_date_value'] != $result['field_event_date_value2']) ? format_date($result['field_event_date_value2'], 'custom', 'g:i a') : NULL;
          $items[$key]['city'] = $result['field_place_value'];
        }
        else {
          $query = db_select('node', 'n');
          $query->condition('n.type', 'event');
          $query->condition('n.status', NODE_PUBLISHED);
          $query->join('field_data_field_place', 'p', 'n.nid = p.entity_id');
          $query->join('field_data_field_event_date', 'd', 'n.nid = d.entity_id');
          $query->condition('p.field_place_value', $ciudad, '=');
          $query->fields('n', array('nid', 'title'));
          $query->fields('d', array('field_event_date_value', 'field_event_date_value2'));
          $query->fields('p', array('field_place_value'));
          $query->orderBy('n.created', 'desc');
          $query->range(0,1);
          $result = $query->execute()->fetchAssoc();
          if(!empty($result)) {
            $items[$key]['title'] = $result['title'];
            $items[$key]['nid'] = $result['nid'];
            $items[$key]['date'] = format_date($result['field_event_date_value'], 'custom', 'm/d/Y');
            $items[$key]['date_ini'] = format_date($result['field_event_date_value'], 'custom', 'g:i a');
            $items[$key]['date_end'] = ($result['field_event_date_value'] != $result['field_event_date_value2']) ? format_date($result['field_event_date_value2'], 'custom', 'g:i a') : NULL;
            $items[$key]['city'] = $result['field_place_value'];
          }
        }
      }

      usort($items, function($a1, $a2) {
         $value1 = strtotime($a1['date']);
         $value2 = strtotime($a2['date']);
         return $value2 - $value1;
      });
      $block['subject'] = t('');
      $block['content'] = theme('sem_hm_list', array('events' => $items));

      break;

  }
  return $block;
}
